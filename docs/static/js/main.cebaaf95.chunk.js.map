{"version":3,"sources":["components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/App.js","services/fetchCharacters.js","index.js"],"names":["Filters","props","className","htmlFor","type","value","search","onChange","evt","handleChange","target","placeholder","CharacterCard","name","species","image","src","alt","CharacterList","api","filter","item","toLowerCase","includes","map","key","id","to","CharacterDetail","routerProps","characterId","parseInt","match","params","character","status","origin","episode","length","Fragment","App","state","bind","fetch","then","response","json","data","setState","results","this","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cebaaf95.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/Filters.scss';\n\nconst Filters = props => {\n    const handleChange = evt => {\n        props.handleChange(evt.target.value)\n    }\n    return (\n        <div className=\"app__search_containter\">\n            <label className=\"app__search-label\" htmlFor=\"inputSearch\">Busca un personaje</label>\n            <input className=\"app__search\" type=\"text\" value={props.search} onChange={handleChange} placeholder=\"Ric\"></input>\n        </div>\n    );\n}\n\nFilters.propTypes = {\n    search: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired\n}\n\n\nexport default Filters;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/CharacterCard.scss';\n\nconst CharacterCard = props => {\n    const { name, species, image } = props;\n\n    return (\n        <div className=\"card__container\">\n            <div className=\"card__img-container\">\n                <img className=\"card__img\" src={image} alt={`portrait of ${name}`}></img>\n            </div>\n            <div className=\"card_info-container\">\n                <h2 className=\"card__title\">{name}</h2>\n                <p className=\"card__species\">{species}</p>\n            </div>\n        </div>\n    );\n}\n\nCharacterCard.propTypes = {\n    name: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n}\n\n\nexport default CharacterCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterList.scss'\n\nconst CharacterList = props => {\n    return (\n        <ul className=\"app__list\">\n            {props.api\n                .filter(item => props.search === '' || item.name.toLowerCase().includes(props.search))\n                .map(item =>\n                    <li className=\"app__character\" key={item.id}>\n                        <Link to={`/character-detail/${item.id}`} className=\"character__link\">\n                            <CharacterCard\n                                image={item.image}\n                                name={item.name}\n                                species={item.species}\n                            ></CharacterCard>\n                        </Link>\n                    </li>\n                )}\n        </ul>);\n}\n\nCharacterList.propTypes = {\n    api: PropTypes.arrayOf(PropTypes.object).isRequired,\n    search: PropTypes.string.isRequired\n}\n\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterDetail.scss';\n\nconst CharacterDetail = props => {\n    const { routerProps, api } = props;\n    const characterId = parseInt(routerProps.match.params.characterId);\n    const character = api.filter(item => item.id === characterId);\n\n    if (character[0]) {\n        const { name, image, status, species, origin, episode } = character[0];\n        return (\n            <div className=\"detail__container\">\n                <Link to=\"/\" className=\"app__back\">>Volver</Link>\n                <div className=\"character-detail\">\n                    <div className=\"character-detail-text\">\n                        <h3 className=\"character-detail__title\">{name}</h3>\n                        <ul className=\"character-detail__characteristics\">\n                            <li className=\"character-detail__item\">\n                                <p className=\"character-detail__info\">status:<span className=\"ch-det__answer\"> {status}</span>\n                                </p>\n                            </li>\n                            <li>\n                                <p className=\"character-detail__info\">species:<span className=\"ch-det__answer\"> {species}</span>\n                                </p>\n                            </li>\n                            <li>\n                                <p className=\"character-detail__info\">origin:<span className=\"ch-det__answer\"> {origin.name}</span></p>\n                            </li>\n                            <li>\n                                <p className=\"character-detail__info\">episodes:<span className=\"ch-det__answer\"> {episode.length}</span></p>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"character-detail__img-ct\"><img className=\"character-detail__img\" src={image} alt={name} /></div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <p>La p√°gina no existe, pero puedes volver al listado</p>\n                <Link to=\"/\" className=\"app__back\">Volver</Link>\n            </React.Fragment>\n        );\n    }\n};\n\nCharacterDetail.propTypes = {\n    routerProps: PropTypes.object.isRequired,\n    api: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CharacterDetail;","import React from 'react';\nimport '../stylesheets/App.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport { fetchCharacters } from '../services/fetchCharacters';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      api: [],\n      search: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  componentDidMount() {\n    fetchCharacters()\n      .then(data => {\n        this.setState({\n          api: data.results\n        })\n      })\n  }\n\n  handleChange(value) {\n    this.setState({\n      search: value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App__header\">\n          <div className=\"header__container\">\n            <h1 className=\"App__title\">Rick and Morty Searcher</h1>\n          </div>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" >\n            <Filters\n              handleChange={this.handleChange}\n              search={this.state.search}\n            />\n            <CharacterList\n              api={this.state.api}\n              search={this.state.search}\n            />\n          </Route>\n          <Route path=\"/character-detail/:characterId\" render={routerProps => {\n            return (\n              <CharacterDetail\n                routerProps={routerProps}\n                api={this.state.api}\n              />\n            );\n          }} />\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\n\nconst fetchCharacters = () => fetch(ENDPOINT).then(response => response.json());\n\n\nexport { fetchCharacters };\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}